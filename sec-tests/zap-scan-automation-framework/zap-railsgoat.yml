---
env:
  contexts:
  - name: "railsgoat"
    urls:
    - "http://railsgoat-web:3000"
    includePaths:
    - "http://railsgoat-web:3000.*"
    excludePaths: []
    authentication:
      method: "browser"
      parameters:
        loginPageUrl: "http://railsgoat-web:3000"
        loginPageWait: 2
        browserId: "firefox"
      verification:
        method: "poll"
        loggedInRegex: "\\Q 200 OK\\E"
        loggedOutRegex: "\\Q 302 Found\\E"
        pollFrequency: 60
        pollUnits: "requests"
        pollUrl: "http://railsgoat-web:3000/dashboard/home"
        pollPostData: ""
    sessionManagement:
      method: "headers"
      parameters: {}
    technology:
      exclude: []
    users:
    - name: "ken@metacorp.com"
      credentials:
        username: "ken@metacorp.com"
        password: "citrusblend"
  parameters:
    failOnError: true
    failOnWarning: false
    progressToStdout: true

jobs:
  - type: spider                       # The traditional spider - fast but doesnt handle modern apps so well
    parameters:
      context: railsgoat               # String: Name of the context to spider, default: first context
      user: "ken@metacorp.com"         # String: An optional user to use for authentication, must be defined in the env
      maxDuration: 15                 # Int: The max time in minutes the spider will be allowed to run for, default: 0 unlimited
    tests:
      - name: 'Confirm railsgoat context is authenticated for traditional spider'
        type: stats
        statistic: 'stats.auth.configure.verification'
        operator: '>='
        value: 1
        onFail: 'error'
      - name: 'Confirm at least 1 successful authentication'
        type: stats
        statistic: 'stats.auth.success'
        operator: '>='
        value: 1
        onFail: 'error'
      - name: 'Confirm railsgoat context is using forms-based authentication'
        type: stats
        statistic: 'stats.auth.configure.auth.form'
        operator: '>='
        value: 1
        onFail: 'error'
  # - type: spiderAjax
  #   parameters:
  #     context: railsgoat
  #     user: "ken@metacorp.com"
  #     maxDuration: 20
  - type: activeScan                   # The active scanner - this actively attacks the target so should only be used with permission
    parameters:
      context: railsgoat               # String: Name of the context to attack, default: first context
      user: "ken@metacorp.com"         # String: An optional user to use for authentication, must be defined in the env
      # policy:                          # String: Name of the scan policy to be used, default: Default Policy
      # maxRuleDurationInMins:           # Int: The max time in minutes any individual rule will be allowed to run for, default: 0 unlimited
      maxScanDurationInMins: 30        # Int: The max time in minutes the active scanner will be allowed to run for, default: 0 unlimited
    tests:
      - name: 'Confirm railsgoat context is authenticated for active scan'
        type: stats
        statistic: 'stats.auth.configure.verification'
        operator: '>='
        value: 1
        onFail: 'error'
      - name: 'Confirm at least 1 successful authentication'
        type: stats
        statistic: 'stats.auth.success'
        operator: '>='
        value: 1
        onFail: 'error'
      - name: 'Confirm railsgoat context is using forms-based authentication'
        type: stats
        statistic: 'stats.auth.configure.auth.form'
        operator: '>='
        value: 1
        onFail: 'error'
  - type: report                       # Report generation
    parameters:
      # template:                         # String: The template id, default : modern
      # theme:                            # String: The template theme, default: the first theme defined for the template (if any)
      reportDir: /zap/wrk
      reportFile: "{{yyyy-MM-dd HH:mm:ss}}-ZAP-Report-[[site]]"
      reportTitle: RailsGoat Full Scan    
      reportDescription: Spider and scan RailsGoat
