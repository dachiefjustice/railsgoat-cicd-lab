/*
- Jenkinsfile for scanning RailsGoat via ZAP's automation framework
*/

pipeline {
  agent any
  
  stages {
    stage('build') {
      steps {
        // Check out source code into the workspace, initializing RailsGoat submodule
        checkout scmGit(
          branches: [[name: '*/master']],
          extensions:
            [submodule(recursiveSubmodules: true, reference: '')],
            userRemoteConfigs: [[url: 'file:///vagrant']]
        )

        // Build/pull required containers
        sh 'docker-compose --file $WORKSPACE/sec-tests/zap-scan-automation-framework/compose.yaml build --pull'
      }
    }

    stage('zap-authenticated-scan') {
      steps {
        // Run an automation framework scan against RailsGoat
        sh 'docker-compose --file $WORKSPACE/sec-tests/zap-scan-automation-framework/compose.yaml up zap-scan-automation-framework'
      }
    }
  }
  
  post {
    always {
      // Prepare ZAP report
      sh 'cd $WORKSPACE/sec-tests/zap-scan-automation-framework && docker-compose up zap-process-report'

      // Clean up containers (remove containers and volumes)
      sh 'cd $WORKSPACE/sec-tests/zap-scan-automation-framework && docker-compose down --volumes'
    }
  } 
}
