/*
- Jenkinsfile for setting up Arachni + RailsGoat
- Arachni scans the running RailsGoat over internal Docker network
- Convert Arachni scan file into zipped HTML report after scanning
*/

pipeline {
  agent any
  
  stages {
    stage('build') {
      steps {
        // Check out source code into the workspace
        checkout scm
        
        // Build Arachni and RailsGoat containers 
        sh 'docker-compose -f $WORKSPACE/sec-tests/arachni/compose.yaml build'
        
        // Run Arachni scan against RailsGoat
        sh 'docker-compose -f $WORKSPACE/sec-tests/arachni/compose.yaml run arachni-scan'
      }
    }
  }
  
  post {
    always {
      // Build an Arachni container to convert report to HTML format
      sh 'docker build -t arachni:$BUILD_TAG $WORKSPACE/sec-tests/arachni'
      
      // Convert report to zipped HTML
      sh 'docker run -v $WORKSPACE/sec-tests/arachni:/arachni_vol arachni:$BUILD_TAG arachni_reporter /arachni_vol/arachni_railsgoat_report.afr --reporter=html:outfile=/arachni_vol/arachni-railsgoat-quickscan-report.html.zip'
      
      // Archive the report with the build
      archiveArtifacts artifacts: 'sec-tests/arachni/arachni-railsgoat-quickscan-report.html.zip', fingerprint: true
    }
  } 
}
